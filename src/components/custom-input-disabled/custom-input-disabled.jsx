import React from 'react';

const CustomInputDisabled = (props, ref) => {
	// принимае один реф
	// у него будет один метод
	// вызовем в родителе

	React.useImperativeHandle(ref, () => ({
		anyFunction: () => {
			// теряются все свойства и методы рефа
			// но можно тут вызвать функцию
			console.log(`функция`);
		}
	}));

	return (
		<input
			//ref={ref} // Передаём реф, а можем и не передавать
		/>
	);
};

// Прокидываем реф сверху через forwardRef 
// Это позволяет добавить ему свою реализацию методов через useImperativeHandle
// При этом стираются все другие методы и свойства
// Но таким образом можно из родителя вызывать функцию в дочернем элементе

/* 
Если нужно достучаться до элемента, то потребуется создать ещё один реф
непосредственно в дочернем элементе
вызывать его методы из useImperativeHandle
также из родителя
*/


export default React.forwardRef(CustomInputDisabled);